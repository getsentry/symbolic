{"version":3,"file":"sentry.js","sources":["../node_modules/@sentry/utils/esm/node.js","../node_modules/@sentry/utils/esm/env.js","../node_modules/@sentry/utils/esm/global.js","../node_modules/@sentry/utils/esm/is.js","../node_modules/@sentry/utils/esm/browser.js","../node_modules/@sentry/utils/esm/error.js","../node_modules/@sentry/utils/esm/dsn.js","../node_modules/@sentry/utils/esm/logger.js","../node_modules/@sentry/utils/esm/string.js","../node_modules/@sentry/utils/esm/object.js","../node_modules/@sentry/utils/esm/stacktrace.js","../node_modules/@sentry/utils/esm/supports.js","../node_modules/@sentry/utils/esm/instrument.js","../node_modules/@sentry/utils/esm/misc.js","../node_modules/@sentry/utils/esm/normalize.js","../node_modules/@sentry/utils/esm/memo.js","../node_modules/@sentry/utils/esm/syncpromise.js","../node_modules/@sentry/utils/esm/promisebuffer.js","../node_modules/@sentry/utils/esm/severity.js","../node_modules/@sentry/utils/esm/time.js","../node_modules/@sentry/utils/esm/envelope.js","../node_modules/@sentry/utils/esm/ratelimit.js","../node_modules/@sentry/hub/esm/session.js","../node_modules/@sentry/hub/esm/scope.js","../node_modules/@sentry/hub/esm/hub.js","../node_modules/@sentry/hub/esm/exports.js","../node_modules/@sentry/core/esm/api.js","../node_modules/@sentry/core/esm/envelope.js","../node_modules/@sentry/utils/esm/baggage.js","../node_modules/@sentry/core/esm/integration.js","../node_modules/@sentry/core/esm/baseclient.js","../node_modules/@sentry/core/esm/transports/base.js","../node_modules/@sentry/core/esm/integrations/functiontostring.js","../node_modules/@sentry/core/esm/integrations/inboundfilters.js","../node_modules/@sentry/browser/esm/eventbuilder.js","../node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","../node_modules/@sentry/browser/esm/transports/utils.js","../node_modules/@sentry/browser/esm/client.js","../node_modules/@sentry/core/esm/version.js","../node_modules/@sentry/utils/esm/clientreport.js","../node_modules/@sentry/browser/esm/transports/fetch.js","../node_modules/@sentry/browser/esm/transports/xhr.js","../node_modules/@sentry/browser/esm/stack-parsers.js","../node_modules/@sentry/browser/esm/helpers.js","../node_modules/@sentry/browser/esm/integrations/globalhandlers.js","../node_modules/@sentry/browser/esm/integrations/trycatch.js","../node_modules/@sentry/browser/esm/integrations/linkederrors.js","../node_modules/@sentry/browser/esm/integrations/httpcontext.js","../node_modules/@sentry/browser/esm/integrations/dedupe.js","../node_modules/@sentry/browser/esm/sdk.js","../src/bar.js","../src/foo.js","../node_modules/@sentry/core/esm/sdk.js","../src/app.js"],"sourcesContent":["import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isNodeEnv } from './node.js';\n\n/** Internal */\n\nvar fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined'       ? window       : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || getGlobalObject()) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=global.js.map\n","var objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat, ty) {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { getGlobalObject } from './global.js';\nimport { isString } from './is.js';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n  \n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el \n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n        className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = getGlobalObject();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\nexport { getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n  \n\n   constructor( message) {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\n\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  var match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  var split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    var projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { getGlobalObject, getGlobalSingleton } from './global.js';\n\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = getGlobalObject();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n            logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  var lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n        colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = [];\n    for (let i = 0; i < input.length; i++) {\n    var value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nfunction isMatchingPattern(value, pattern) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex, isMatchingPattern, safeJoin, snipLine, truncate };\n//# sourceMappingURL=string.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  var memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (var key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n            objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { _optionalChain } from './buildPolyfills';\n\nvar STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      for (var parser of sortedParsers) {\n        var frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\nfunction node(getModule) {\n  var FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  var FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/;\n\n    return (line) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    var lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object;\n    let method;\n    let functionName;\n    let typeName;\n    let methodName;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n                methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        var objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    var filename = _optionalChain([lineMatch, 'access', _ => _[2], 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('file://')]) ? lineMatch[2].substr(7) : lineMatch[2];\n    var isNative = lineMatch[5] === 'native';\n    var isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    var in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: _optionalChain([getModule, 'optionalCall', _4 => _4(filename)]),\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { getGlobalObject } from './global.js';\nimport { logger } from './logger.js';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var global = getGlobalObject();\n\n  // Fast path to avoid DOM I/O\n    if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  var doc = global.document;\n    if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n      var chrome = (global ).chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { getGlobalObject } from './global.js';\nimport { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\n\nvar global = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (var handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch) {\n    return function (...args) {\n      var handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n            return originalFetch.apply(global, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  var xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n            var xhr = this;\n      var url = args[1];\n      var xhrInfo = (xhr.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n  global.onpopstate = function ( ...args) {\n    var to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      var url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nvar debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    var target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    var name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n        var proto = (global )[target] && (global )[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n        \n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            var el = this ;\n            var handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            var handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              var handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n          \n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              var el = this ;\n              var handlers = el.__sentry_instrumentation_handlers__ || {};\n              var handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type];                 }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n            return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","import { getGlobalObject } from './global.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = getGlobalObject() ;\n  var crypto = (global.crypto || global.msCrypto) ;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  var getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n        ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, parseUrl, stripUrlQueryAndFragment, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n    object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      var jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, depth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = convertToPlainObject(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n        if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n        if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n        for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { isThenable } from './is.js';\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n  \n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n                handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  var buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    var task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      var capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n                    if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nvar validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { getGlobalObject } from './global.js';\nimport { dynamicRequire, isNodeEnv } from './node.js';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","import { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  var envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    var envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input, textEncoder) {\n  var utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (var item of items) {\n    const [itemHeaders, payload] = item ;\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  var totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  var merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (var buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  var buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nvar ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, envelopeItemTypeToDataCategory, forEachEnvelopeItem, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nvar DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  var headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  var updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  var rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  var retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (var limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      var headerDelay = parseInt(retryAfter, 10);\n      var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (var category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = timestampInSeconds();\n\n  var session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, getGlobalSingleton, SyncPromise, logger, isThenable } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n  \n\n  /** Callback for client to receive scope changes. */\n  \n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  \n\n  /** Array of breadcrumbs. */\n  \n\n  /** User */\n  \n\n  /** Tags */\n  \n\n  /** Extra */\n  \n\n  /** Contexts */\n  \n\n  /** Attachments */\n  \n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  \n\n  /** Fingerprint */\n  \n\n  /** Severity */\n    \n\n  /** Transaction Name */\n  \n\n  /** Span */\n  \n\n  /** Session */\n  \n\n  /** Request Mode Session Status */\n  \n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n        level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n            delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n            captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, getGlobalObject, getGlobalSingleton, isNodeEnv } from '@sentry/utils';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n  \n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n        const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    const { userAgent } = global.navigator || {};\n\n    var session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    var client = this.getClient();\n    var options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n     _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n    captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction(\n    {\n      metadata: { source: 'custom' },\n      ...context,\n    },\n    customSamplingContext,\n  );\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { urlEncode, makeDsn, dsnToString } from '@sentry/utils';\n\nvar SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  var protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  var port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  var tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  var sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  var dsn = makeDsn(dsnLike);\n  var endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (var key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      var user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { dsnToString, createEnvelope, dropUndefinedKeys, getSentryBaggageItems } from '@sentry/utils';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return;\n  }\n  const { name, version } = metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  var envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var eventType = event.type || 'event';\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  var envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  var eventItem = [\n    {\n      type: eventType,\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n    },\n    event,\n  ];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  var baggage = event.sdkProcessingMetadata && event.sdkProcessingMetadata.baggage;\n  var dynamicSamplingContext = baggage && getSentryBaggageItems(baggage);\n\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: dropUndefinedKeys({ ...dynamicSamplingContext }) ,\n      }),\n  };\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { isString } from './is.js';\nimport { logger } from './logger.js';\n\nvar BAGGAGE_HEADER_NAME = 'baggage';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nvar MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/** Create an instance of Baggage */\nfunction createBaggage(initItems, baggageString = '', mutable = true) {\n  return [{ ...initItems }, baggageString, mutable];\n}\n\n/** Get a value from baggage */\nfunction getBaggageValue(baggage, key) {\n  return baggage[0][key];\n}\n\n/** Add a value to baggage */\nfunction setBaggageValue(baggage, key, value) {\n  if (isBaggageMutable(baggage)) {\n    baggage[0][key] = value;\n  }\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isSentryBaggageEmpty(baggage) {\n  return Object.keys(baggage[0]).length === 0;\n}\n\n/** Returns Sentry specific baggage values */\nfunction getSentryBaggageItems(baggage) {\n  return baggage[0];\n}\n\n/**\n * Returns 3rd party baggage string of @param baggage\n * @param baggage\n */\nfunction getThirdPartyBaggage(baggage) {\n  return baggage[1];\n}\n\n/**\n * Checks if baggage is mutable\n * @param baggage\n * @returns true if baggage is mutable, else false\n */\nfunction isBaggageMutable(baggage) {\n  return baggage[2];\n}\n\n/**\n * Sets the passed baggage immutable\n * @param baggage\n */\nfunction setBaggageImmutable(baggage) {\n  baggage[2] = false;\n}\n\n/** Serialize a baggage object */\nfunction serializeBaggage(baggage) {\n  return Object.keys(baggage[0]).reduce((prev, key) => {\n    var val = baggage[0][key] ;\n    var baggageEntry = `${SENTRY_BAGGAGE_KEY_PREFIX}${encodeURIComponent(key)}=${encodeURIComponent(val)}`;\n    var newVal = prev === '' ? baggageEntry : `${prev},${baggageEntry}`;\n    if (newVal.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`Not adding key: ${key} with val: ${val} to baggage due to exceeding baggage size limits.`);\n      return prev;\n    } else {\n      return newVal;\n    }\n  }, baggage[1]);\n}\n\n/**\n * Parse a baggage header from a string or a string array and return a Baggage object\n *\n * If @param includeThirdPartyEntries is set to true, third party baggage entries are added to the Baggage object\n * (This is necessary for merging potentially pre-existing baggage headers in outgoing requests with\n * our `sentry-` values)\n */\nfunction parseBaggageHeader(\n  inputBaggageValue,\n  includeThirdPartyEntries = false,\n) {\n  // Adding this check here because we got reports of this function failing due to the input value\n  // not being a string. This debug log might help us determine what's going on here.\n  if ((!Array.isArray(inputBaggageValue) && !isString(inputBaggageValue)) || typeof inputBaggageValue === 'number') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        '[parseBaggageHeader] Received input value of incompatible type: ',\n        typeof inputBaggageValue,\n        inputBaggageValue,\n      );\n\n    // Gonna early-return an empty baggage object so that we don't fail later on\n    return createBaggage({}, '');\n  }\n\n  var baggageEntries = (isString(inputBaggageValue) ? inputBaggageValue : inputBaggageValue.join(','))\n    .split(',')\n    .map(entry => entry.trim())\n    .filter(entry => entry !== '' && (includeThirdPartyEntries || SENTRY_BAGGAGE_KEY_PREFIX_REGEX.test(entry)));\n\n  return baggageEntries.reduce(\n    ([baggageObj, baggageString], curr) => {\n      const [key, val] = curr.split('=');\n      if (SENTRY_BAGGAGE_KEY_PREFIX_REGEX.test(key)) {\n        var baggageKey = decodeURIComponent(key.split('-')[1]);\n        return [\n          {\n            ...baggageObj,\n            [baggageKey]: decodeURIComponent(val),\n          },\n          baggageString,\n          true,\n        ];\n      } else {\n        return [baggageObj, baggageString === '' ? curr : `${baggageString},${curr}`, true];\n      }\n    },\n    [{}, '', true],\n  );\n}\n\n/**\n * Merges the baggage header we saved from the incoming request (or meta tag) with\n * a possibly created or modified baggage header by a third party that's been added\n * to the outgoing request header.\n *\n * In case @param headerBaggageString exists, we can safely add the the 3rd party part of @param headerBaggage\n * with our @param incomingBaggage. This is possible because if we modified anything beforehand,\n * it would only affect parts of the sentry baggage (@see Baggage interface).\n *\n * @param incomingBaggage the baggage header of the incoming request that might contain sentry entries\n * @param thirdPartyBaggageHeader possibly existing baggage header string or string[] added from a third\n *        party to the request headers\n *\n * @return a merged and serialized baggage string to be propagated with the outgoing request\n */\nfunction mergeAndSerializeBaggage(incomingBaggage, thirdPartyBaggageHeader) {\n  if (!incomingBaggage && !thirdPartyBaggageHeader) {\n    return '';\n  }\n\n  var headerBaggage = (thirdPartyBaggageHeader && parseBaggageHeader(thirdPartyBaggageHeader, true)) || undefined;\n  var thirdPartyHeaderBaggage = headerBaggage && getThirdPartyBaggage(headerBaggage);\n\n  var finalBaggage = createBaggage((incomingBaggage && incomingBaggage[0]) || {}, thirdPartyHeaderBaggage || '');\n  return serializeBaggage(finalBaggage);\n}\n\n/**\n * Helper function that takes a raw baggage string (if available) and the processed sentry-trace header\n * data (if available), parses the baggage string and creates a Baggage object\n * If there is no baggage string, it will create an empty Baggage object.\n * In a second step, this functions determines if the created Baggage object should be set immutable\n * to prevent mutation of the Sentry data.\n *\n * Extracted this logic to a function because it's duplicated in a lot of places.\n *\n * @param rawBaggageValue\n * @param sentryTraceHeader\n */\nfunction parseBaggageSetMutability(\n  rawBaggageValue,\n  sentryTraceHeader,\n) {\n  var baggage = parseBaggageHeader(rawBaggageValue || '');\n\n  // Because we are always creating a Baggage object by calling `parseBaggageHeader` above\n  // (either a filled one or an empty one, even if we didn't get a `baggage` header),\n  // we only need to check if we have a sentry-trace header or not. As soon as we have it,\n  // we set baggage immutable. In case we don't get a sentry-trace header, we can assume that\n  // this SDK is the head of the trace and thus we still permit mutation at this time.\n  // There is one exception though, which is that we get a baggage-header with `sentry-`\n  // items but NO sentry-trace header. In this case we also set the baggage immutable for now\n  // but if smoething like this would ever happen, we should revisit this and determine\n  // what this would actually mean for the trace (i.e. is this SDK the head?, what happened\n  // before that we don't have a sentry-trace header?, etc)\n  (sentryTraceHeader || !isSentryBaggageEmpty(baggage)) && setBaggageImmutable(baggage);\n\n  return baggage;\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, createBaggage, getBaggageValue, getSentryBaggageItems, getThirdPartyBaggage, isBaggageMutable, isSentryBaggageEmpty, mergeAndSerializeBaggage, parseBaggageHeader, parseBaggageSetMutability, serializeBaggage, setBaggageImmutable, setBaggageValue };\n//# sourceMappingURL=baggage.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\nvar installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n  return integrations.reduce((acc, integrations) => {\n    if (acc.every(accIntegration => integrations.name !== accIntegration.name)) {\n      acc.push(integrations);\n    }\n    return acc;\n  }, [] );\n}\n\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n  var defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  var userIntegrations = options.integrations;\n\n  let integrations = [...filterDuplicates(defaultIntegrations)];\n\n  if (Array.isArray(userIntegrations)) {\n    // Filter out integrations that are also included in user options\n    integrations = [\n      ...integrations.filter(integrations =>\n        userIntegrations.every(userIntegration => userIntegration.name !== integrations.name),\n      ),\n      // And filter out duplicated user options integrations\n      ...filterDuplicates(userIntegrations),\n    ];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(integrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  var integrationsNames = integrations.map(i => i.name);\n  var alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  var integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { updateSession, Scope } from '@sentry/hub';\nimport { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, uuid4, dateTimestampInSeconds, normalize, truncate, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations } from './integration.js';\n\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n  \n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  \n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    var promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    var transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (var attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      var env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      var key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    var exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (var ex of exceptions) {\n        var mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    var sessionNonTerminal = session.status === 'ok';\n    var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      var tick = 1;\n\n      var interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = this.getOptions();\n    var prepared = {\n      ...event,\n      event_id: event.event_id || hint.event_id || uuid4(),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = resolvedSyncPromise(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      var attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n   _normalizeEvent(event, depth, maxBreadth) {\n    if (!event) {\n      return null;\n    }\n\n    var normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace && normalized.contexts) {\n      normalized.contexts.trace = event.contexts.trace;\n\n      // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n      if (event.contexts.trace.data) {\n        normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n      }\n    }\n\n    // event.spans[].data may contain circular/dangerous data so we need to normalize it\n    if (event.spans) {\n      normalized.spans = event.spans.map(span => {\n        // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n        if (span.data) {\n          span.data = normalize(span.data, depth, maxBreadth);\n        }\n        return span;\n      });\n    }\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n   _applyClientOptions(event) {\n    var options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    var request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n   _applyIntegrationsMetadata(event) {\n    var integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.'));\n    }\n\n    var isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        var isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        var beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        var session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    var outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n    \n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n  var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if (isThenable(rv)) {\n    return rv.then(\n      event => {\n        if (!(isPlainObject(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!(isPlainObject(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, serializeEnvelope, logger, updateRateLimits, SentryError } from '@sentry/utils';\n\nvar DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  var flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    var filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      var envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n        var filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    var recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    var requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event due to full buffer');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n        originalFunctionToString = Function.prototype.toString;\n\n        Function.prototype.toString = function ( ...args) {\n      var context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","import { logger, getEventDescription, isMatchingPattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcess = (event) => {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n        return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { isEvent, extractExceptionKeysForMessage, normalizeToSize, addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  var frames = parseStackFrames(stackParser, ex);\n\n  var exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  var event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = ex.stacktrace || ex.stack || '';\n\n  var popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n    level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    var errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    var domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      var name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    var objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  var event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, htmlTreeAsString, severityLevelFromString, safeJoin, getGlobalObject, parseUrl } from '@sentry/utils';\n\n/** JSDoc */\n\nvar BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n    function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target , keyAttrs)\n        : htmlTreeAsString(handlerData.event , keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  var breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  var global = getGlobalObject();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  var parsedLoc = parseUrl(global.location.href);\n  let parsedFrom = parseUrl(from);\n  var parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\n\nvar global = getGlobalObject();\nlet cachedFetchImpl;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * var f = window.fetch;\n * window.fetch = function () {\n *   var p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  var document = global.document;\n  let fetchImpl = global.fetch;\n    if (document && typeof document.createElement === 'function') {\n    try {\n      var sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      var contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  }\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nfunction sendReport(url, body) {\n  var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    sendBeacon(url, body);\n  } else if (supportsFetch()) {\n    var fetch = getNativeFetchImplementation();\n    fetch(url, {\n      body,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    }).then(null, error => {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(error);\n    });\n  }\n}\n\nexport { getNativeFetchImplementation, sendReport };\n//# sourceMappingURL=utils.js.map\n","import { BaseClient, SDK_VERSION, getCurrentHub, getEnvelopeEndpointWithUrlEncodedAuth } from '@sentry/core';\nimport { getGlobalObject, getEventDescription, logger, createClientReportEnvelope, dsnToString, serializeEnvelope } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\nimport { sendReport } from './transports/utils.js';\n\nvar globalObject = getGlobalObject();\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n        level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    var breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    var outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options);\n    var envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(e);\n    }\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","var SDK_VERSION = '7.8.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  var clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { createTransport } from '@sentry/core';\nimport { getNativeFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    var requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nvar XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (var header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  var frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex =\n  /^\\s*at (?:(.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nvar chrome = line => {\n  var parts = chromeRegex.exec(line);\n\n  if (parts) {\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      var subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nvar chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nvar gecko = line => {\n  var parts = geckoREgex.exec(line);\n\n  if (parts) {\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      var subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nvar geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nvar winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nvar winjs = line => {\n  var parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nvar winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nvar opera10 = line => {\n  var parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nvar opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nvar opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nvar opera11 = line => {\n  var parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nvar opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nvar defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nvar defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = (func, filename) => {\n  var isSafariExtension = func.indexOf('safari-extension') !== -1;\n  var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getOriginalFunction, addExceptionTypeValue, addExceptionMechanism, markFunctionWrapped, addNonEnumerableProperty } from '@sentry/utils';\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  ) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n    // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n            var wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  \n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} \n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n      } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    var options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n        for (var key in options) {\n      var installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n        (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      var event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n        (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      var event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  var ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  var groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  var e = (event.exception = event.exception || {});\n  // event.exception.values\n  var ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  var ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  var ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  var hub = getCurrentHub();\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { getGlobalObject, fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { wrap } from '../helpers.js';\n\nvar DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    var global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n    return function ( ...args) {\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapRAF(original) {\n    return function ( callback) {\n        return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n    return function ( ...args) {\n        var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n    var global = getGlobalObject() ;\n    var proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n            \n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n                    fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n                wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n          ) {\n      return function (\n                \n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        var wrappedEventHandler = fn ;\n        try {\n          var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    var client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        var url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        var headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        var request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcessor = currentEvent => {\n      var self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  var currentMessage = currentEvent.message;\n  var previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  var previousException = _getExceptionFromEvent(previousEvent);\n  var currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    var frameA = previousFrames[i];\n    var frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  var exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getCurrentHub, getReportDialogEndpoint } from '@sentry/core';\nimport { getGlobalObject, stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { wrap as wrap$1 } from './helpers.js';\nimport './integrations/index.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport './transports/index.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nvar defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    var window = getGlobalObject();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  var clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  var global = getGlobalObject();\n  if (!global.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  var dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n        script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  var window = getGlobalObject();\n  var document = window.document;\n\n  if (typeof document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  var hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import foo from './foo';\n\nexport default function bar(msg) {\n  foo(msg);\n}\n\n","export default function foo(msg) {\n  throw new Error(msg);\n}\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n            console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  var hub = getCurrentHub();\n  var scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import * as Sentry from '@sentry/browser';\nimport bar from \"./bar\";\n\nSentry.init({\n  dsn: 'https://5b0e5845265a472ba9c269bbfa0c8388@o333688.ingest.sentry.io/5334254',\n  release: 'iddqd'\n});\n\nconst buttonCallback = () => bar(\"wat\");\n\nwindow.addEventListener(\"load\", () => {\n  document.querySelector(\"button\").addEventListener(\"click\", buttonCallback);\n});\n"],"names":["isNodeEnv","__SENTRY_BROWSER_BUNDLE__","Object","prototype","toString","call","process","fallbackGlobalObject","getGlobalObject","global","window","self","getGlobalSingleton","name","creator","obj","__SENTRY__","objectToString","isError","wat","isInstanceOf","Error","isBuiltin","ty","isErrorEvent","isDOMError","isString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","then","base","_e","htmlTreeAsString","elem","keyAttrs","currentElem","out","height","len","sepLength","length","nextStr","_htmlElementAsString","push","parentNode","reverse","join","_oO","el","className","classes","key","attr","i","tagName","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","forEach","keyAttrPair","id","split","allowedAttrs","SentryError","constructor","message","super","this","setPrototypeOf","DSN_REGEX","dsnToString","dsn","withPassword","host","path","pass","port","projectId","protocol","publicKey","dsnFromComponents","components","makeDsn","from","str","match","exec","lastPath","slice","pop","projectMatch","dsnFromString","__SENTRY_DEBUG__","component","isValidProtocol","isNaN","parseInt","validateDsn","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","console","wrappedLevels","level","originalWrappedFunc","__sentry_original__","keys","makeLogger","enabled","logger","enable","disable","args","truncate","max","substr","safeJoin","input","delimiter","Array","isArray","output","value","String","e","isMatchingPattern","pattern","test","indexOf","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","_Oo","addNonEnumerableProperty","defineProperty","writable","configurable","proto","getOriginalFunction","func","convertToPlainObject","stack","getOwnProperties","newObj","type","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","hasOwnProperty","extractExceptionKeysForMessage","exception","maxLength","sort","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","undefined","memoVal","get","returnValue","set","item","createStackParser","parsers","sortedParsers","a","b","p","skipFirst","frames","line","parser","frame","localStack","firstFrameFunction","function","lastFrameFunction","filename","stripSentryFramesAndReverse","getFunctionName","fn","supportsFetch","Headers","Request","Response","isNativeFetch","handlers","instrumented","instrument","originalConsoleMethod","triggerHandlers","apply","instrumentConsole","triggerDOMHandler","bind","globalDOMEventHandler","makeDOMEventHandler","document","addEventListener","originalAddEventListener","listener","options","__sentry_instrumentation_handlers__","handlerForType","refCount","handler","originalRemoveEventListener","instrumentDOM","xhrproto","XMLHttpRequest","originalOpen","xhr","url","xhrInfo","__sentry_xhr__","method","toUpperCase","__sentry_own_request__","onreadystatechangeHandler","readyState","status_code","status","endTimestamp","Date","now","startTimestamp","onreadystatechange","readyStateArgs","originalSend","body","instrumentXHR","fetch","result","doc","sandbox","createElement","hidden","head","appendChild","contentWindow","removeChild","err","warn","supportsNativeFetch","originalFetch","handlerData","fetchData","getFetchMethod","getFetchUrl","response","error","instrumentFetch","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","history","pushState","replaceState","supportsHistory","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","lastHref","to","location","href","instrumentHistory","_oldOnErrorHandler","onerror","msg","column","arguments","_oldOnUnhandledRejectionHandler","onunhandledrejection","addInstrumentationHandler","data","fetchArgs","debounceTimerID","lastCapturedEvent","globalListener","event","isContentEditable","shouldSkipDOMEvent","previous","current","shouldShortcircuitPreviousDebounce","clearTimeout","setTimeout","uuid4","crypto","msCrypto","randomUUID","replace","getRandomByte","getRandomValues","Uint8Array","Math","random","c","parseUrl","query","fragment","relative","getFirstException","values","getEventDescription","event_id","eventId","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","checkOrSetAlreadyCaught","__sentry_captured__","normalize","depth","Infinity","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","WeakSet","inner","has","add","delete","splice","memoBuilder","memoize","unmemoize","includes","stringified","_events","isSyntheticEvent","getPrototypeOf","stringifyValue","startsWith","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","States","resolvedSyncPromise","SyncPromise","resolve","rejectedSyncPromise","reason","_","reject","__init","_state","PENDING","__init2","_handlers","executor","__init3","__init4","__init5","__init6","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","catch","val","finally","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","makePromiseBuffer","limit","buffer","remove","task","$","taskProducer","drain","timeout","counter","capturedSetTimeout","validSeverityLevels","dateTimestampSource","nowSeconds","platformPerformance","mod","module","request","require","performance","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","buffers","totalLength","reduce","acc","buf","merged","offset","concatBuffers","createAttachmentEnvelopeItem","attachment","content_type","contentType","attachment_type","attachmentType","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","ITEM_TYPE_TO_DATA_CATEGORY_MAP","session","sessions","transaction","client_report","user_report","envelopeItemTypeToDataCategory","updateRateLimits","limits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","retryAfter","categories","headerDelay","delay","category","all","header","headerDate","parse","parseRetryAfterHeader","makeSession","context","startingTime","sid","init","timestamp","started","duration","errors","ignoreDuration","toISOString","did","attrs","release","environment","ip_address","ipAddress","user_agent","userAgent","sessionToJSON","updateSession","user","email","username","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","static","scope","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getUser","getRequestSession","setRequestSession","requestSession","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSpan","span","getSpan","getTransaction","setSession","getSession","update","captureContext","updatedScope","contexts","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","min","mergedBreadcrumb","clearBreadcrumbs","addAttachment","getAttachments","clearAttachments","applyToEvent","hint","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","sdkProcessingMetadata","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","index","processor","log","final","concat","addGlobalEventProcessor","DEFAULT_BREADCRUMBS","Hub","_stack","client","_version","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","clone","getScope","getStack","getClient","popScope","withScope","captureException","_lastEventId","syntheticException","_withClient","originalException","captureMessage","captureEvent","lastEventId","beforeBreadcrumb","getOptions","finalBreadcrumb","configureScope","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","layer","closeSession","startSession","navigator","currentSession","shouldSendDefaultPii","sendDefaultPii","sentry","getMainCarrier","extensions","carrier","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","activeDomain","domain","active","registryHubTopStack","getHubFromActiveDomain","_encodedAuth","sdkInfo","sentry_key","sentry_version","sentry_client","encodeURIComponent","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","tunnel","_metadata","sdk","getBaseApiEndpoint","_getIngestEndpoint","getSdkMetadataForEnvelopeHeader","metadata","createEventEnvelope","eventType","transactionSampling","samplingMethod","rate","sampleRate","integrations","packages","enhanceEventWithSdkInfo","envelopeHeaders","baggage","dynamicSamplingContext","getSentryBaggageItems","sent_at","createEventEnvelopeHeaders","sample_rates","installedIntegrations","filterDuplicates","every","accIntegration","getIntegrationsToSetup","defaultIntegrations","userIntegrations","userIntegration","integrationsNames","alwaysLastToRun","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_options","_dsn","_transport","transport","recordDroppedEvent","transportOptions","_process","eventFromException","_captureEvent","promisedEvent","eventFromMessage","_isEnabled","sendSession","getDsn","getTransport","flush","_isClientDoneProcessing","clientFinished","transportFlushed","close","integrationIndex","setupOnce","getIntegrationById","integrationId","sendEvent","env","attachments","_sendEnvelope","createSessionEnvelope","sendClientReports","_updateSessionFromEvent","crashed","errored","exceptions","ex","sessionNonTerminal","Number","ticked","interval","setInterval","clearInterval","_prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","_applyClientOptions","_applyIntegrationsMetadata","finalScope","evt","_normalizeEvent","maxBreadth","spans","dist","maxValueLength","integrationsArray","_processEvent","finalEvent","beforeSend","isTransaction","__sentry__","rv","nullErr","_ensureBeforeSendRv","processedEvent","promise","send","_clearOutcomes","outcomes","quantity","createTransport","makeRequest","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","disabledUntil","isRateLimited","filteredEnvelope","recordEnvelopeLoss","originalFunctionToString","FunctionToString","Function","__initStatic","DEFAULT_IGNORE_ERRORS","InboundFilters","eventProcess","clientOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","ignoreInternal","_mergeOptions","_isSentryError","oO","_getPossibleEventMessages","some","_isIgnoredError","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","stacktrace","_getLastValidUrl","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","__serialized__","eventFromPlainObject","synthetic","Breadcrumbs","dom","_consoleBreadcrumb","_innerDomBreadcrumb","serializeAttribute","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","parsedLoc","parsedFrom","parsedTo","cachedFetchImpl","getNativeFetchImplementation","fetchImpl","globalObject","BrowserClient","visibilityState","_flushOutcomes","breadcrumbIntegration","platform","discarded_events","sendBeacon","credentials","keepalive","sendReport","makeFetchTransport","nativeFetch","requestOptions","referrerPolicy","fetchOptions","makeXHRTransport","getResponseHeader","open","setRequestHeader","createFrame","lineno","colno","in_app","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","subMatch","extractSafariExtensionDetails","isSafariExtension","isSafariWebExtension","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","getOwnPropertyDescriptor","GlobalHandlers","_installFunc","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","getHubAndOptions","ERROR_TYPES_RE","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addMechanismAndCapture","ev","ev0","ev0s","ev0sf","getLocationHref","DEFAULT_EVENT_TARGET","TryCatch","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","prop","wrapOptions","originalFunction","eventName","handleEvent","wrappedEventHandler","originalEventHandler","LinkedErrors","_key","_limit","linkedErrors","_walkErrorTree","_handler","HttpContext","referrer","Referer","Dedupe","eventProcessor","currentEvent","previousEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","_previousEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","Integrations.InboundFilters","Integrations.FunctionToString","startSessionOnHub","bar","foo","SENTRY_RELEASE","autoSessionTracking","clientClass","debug","initialScope","initAndBind","startSessionTracking","Sentry.init","buttonCallback","querySelector"],"mappings":"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"}