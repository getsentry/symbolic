name: CI

on:
  push:
    branches:
      - master
      - "release/**"
  pull_request:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  lints:
    name: Style/Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - run: rustup toolchain install stable --profile minimal --component rustfmt --component clippy --no-self-update

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - run: make style-python

      - name: Run cargo clippy
        run: cargo clippy --all-features --workspace --tests --examples -- -D clippy::all

      - run: make lint-python

  doc-comments:
    name: Rust doc comments
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v3

      - run: rustup toolchain install stable --profile minimal --component rust-docs --no-self-update

      - uses: Swatinem/rust-cache@v2

      - run: cargo doc --workspace --all-features --document-private-items --no-deps

  test-rust:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: Rust Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - run: rustup toolchain install stable --profile minimal --no-self-update

      - uses: Swatinem/rust-cache@v2

      - run: cargo test --workspace --all-features --all-targets
      - run: cargo test --workspace --all-features --doc

  test-python:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Python Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      SYMBOLIC_DEBUG: 1

    steps:
      - uses: actions/checkout@v3

      - run: rustup toolchain install stable --profile minimal --no-self-update

      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - uses: Swatinem/rust-cache@v2

      - run: make test-python

  test-cabi:
    strategy:
      fail-fast: false
      matrix:
        # Should also run on ubuntu-latest but CI doesn't like this yet.
        os: [macos-latest]

    name: CABI tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - run: rustup toolchain install stable --profile minimal --no-self-update

      - uses: Swatinem/rust-cache@v2

      - run: cargo install cbindgen

      - run: cd symbolic-cabi && make test

  codecov:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install rust stable toolchain
        run: rustup toolchain install stable --profile minimal --component llvm-tools-preview --no-self-update

      - uses: Swatinem/rust-cache@v2

      - uses: taiki-e/install-action@cargo-llvm-cov

      - run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - uses: codecov/codecov-action@e156083f13aff6830c92fc5faa23505779fbf649
        with:
          files: lcov.info
