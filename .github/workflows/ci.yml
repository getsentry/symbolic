name: CI

on:
  push:
    branches:
      - master
      - "release/**"
  pull_request:

env:
  RUSTFLAGS: -Dwarnings

jobs:
  lints:
    name: Style/Linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - run: make style-python

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --workspace --all-targets -- -D clippy::all

      - run: make lint-python

  doc-comments:
    name: Rust doc comments
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rust-docs

      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace --all-features --no-deps

  test-rust:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Rust Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --all-targets

  test-python:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Python Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      SYMBOLIC_DEBUG: 1

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - uses: Swatinem/rust-cache@v1

      - run: make test-python

  test-cabi:
    strategy:
      fail-fast: false
      matrix:
        # Should also run on ubuntu-latest but CI doesn't like this yet.
        os: [macos-latest]

    name: CABI tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cbindgen

      - run: cd symbolic-cabi && make test

  codecov:
    name: Code Coverage
    runs-on: ubuntu-latest
    continue-on-error: true # well, its nightly and highly experimental

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: llvm-tools-preview
          override: true

      - uses: Swatinem/rust-cache@v1

      - uses: Swatinem/fucov@v1
        with:
          args: --workspace --all-features

      - uses: codecov/codecov-action@e156083f13aff6830c92fc5faa23505779fbf649
        with:
          directory: coverage
