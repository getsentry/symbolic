name: CI

on:
  push:
    branches:
      - master
      - "release/**"
  pull_request:

jobs:
  lint-rust:
    name: Rust Style/Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1
        with:
          key: lints

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --workspace --tests --examples -- -D clippy::all

  test-rust:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Rust Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CXX: clang
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1
        with:
          key: test-rust

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features

  lint-python:
    name: Python Style/Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2

      - run: make style-python
      - run: make lint-python

  test-python:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Python Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CXX: clang
      SYMBOLIC_DEBUG: 1

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Setup Python
        uses: actions/setup-python@v2

      - uses: Swatinem/rust-cache@v1
        with:
          key: test-python

      - run: make test-python
